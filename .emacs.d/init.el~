;; Packages
(require 'package)

(setq package-list '(evil
                     evil-leader
		     helm
           ))
(add-to-list 'package-archives
             '("melpa" . "https://melpa.org/packages/") t)

(package-initialize)

(unless package-archive-contents
  (package-refresh-contents))

(dolist (package package-list)
  (unless (package-installed-p package)
    (package-install package)))

(add-to-list 'custom-theme-load-path "~/.emacs.d/themes/") ; Add theme path
(load-file"~/.emacs.d/functions.el") ; Add theme path

;; Evil-mode
(require 'evil)
(evil-mode t)

(require 'evil-leader)
(global-evil-leader-mode)
(evil-leader/set-leader "<SPC>")
(evil-leader/set-key
  "b" 'switch-to-buffer
  "w" 'save-buffer
  "f" 'spacemacs/helm-find-files
  )

(setq tab-width 4) ; Tab width

;; Undo limits
(setq undo-limit 20000000)
(setq undo-strong-limit 40000000)


(electric-pair-mode 1) ; Double brackets

(delete-selection-mode 1) ; Replace active region

(show-paren-mode 1) ; Highlights matching paren pair

;; Helm
(helm-mode)
(define-key helm-map (kbd "<tab>") 'helm-execute-persistent-action) ; rebind tab to do persistent action

(set-default-font "Liberation Mono-13") ;; Font

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(custom-safe-themes
   (quote
    ("3cc2385c39257fed66238921602d8104d8fd6266ad88a006d0a4325336f5ee02" "f46ebf04f3877132b28a245b063a51bc8c4c2a68bbf58ef4257fae613a6447c4" "03ea866815fe82c4736611acafef3c90519d15cd3d465d8f146ebfa3a293b663" "f34b107e8c8443fe22f189816c134a2cc3b1452c8874d2a4b2e7bb5fe681a10b" default)))
 '(package-selected-packages (quote (helm helm-config evil-leader evil))))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
